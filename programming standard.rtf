{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red26\green26\blue26;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720

\f0\fs26 \cf2 \expnd0\expndtw0\kerning0
Summary:\
\'a0 Total Score: 41/43\
\'a0 Late Penalty: 0\
\'a0 Style/Design/Documentation: 8.5/10.5\
\'a0 Correctness: 25.5/25.5\
\'a0 Testing: 7/7\
\
Style/Design/Documentation:\
\'a0 \'a0Subtotal: 8.5/10.5\
\
\'a0 \'a0In this section, any item marked OK means no points were subtracted from total.\
\'a0 \'a0Any item marked with a negative value means points were deducted for that item.\
\'a0 \'a0See style comments below for details on point deductions.\
\
\'a0 \'a0(OK) student name and loginid doesn't appear at the top of all submitted files\
\'a0 \'a0(OK) main is not in a separate class from component\
\'a0 \'a0(-1) used Random incorrectly; created new Random object every time a random\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0number needed to be generated\
\'a0 \'a0(OK) does not follow class design described in assignment\
\'a0 \'a0(-1) code contains magic numbers\
\'a0 \'a0(OK) unclear identifier names\
\'a0 \'a0(OK) doesn't use Java naming conventions\
\'a0 \'a0(OK) inconsistent/bad indenting\
\'a0 \'a0(OK) not all data were declared private\
\'a0 \'a0(OK) undescriptive/sparse commenting\
\
\'a0 \'a0Total: 9/9\
\
\'a0 \'a0Answers to README Questions:\
\'a0 \'a0(0.5/0.5) Question 1\
\'a0 \'a0(0.5/0.5) Question 2\
\'a0 \'a0(0.5/0.5) Question 3\
\
\'a0 \'a0Total: 1.5/1.5\
\
\'a0 \'a0Style comments:\
\'a0 \'a0 \'a0 \'a0 login id is not USC ID\
\
Correctness:\
\'a0 \'a0Subtotal: 25.5/25.5\
\
\'a0 \'a0(20.5/20.5) program appears to work properly:\
\'a0 \'a0 \'a0 \'a0(2/2) prompts for number of trials, and does that many trials\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0(can only get if bars are labeled with number for that outcome)\
\'a0 \'a0 \'a0 \'a0(2/2) checks that number of trials is positive using a loop\
\'a0 \'a0 \'a0 \'a0(3/3) bars drawn with heights appropriate to results\
\'a0 \'a0 \'a0 \'a0(0.5/0.5) each bar is labeled with the outcome it represents\
\'a0 \'a0 \'a0 \'a0(0.5/0.5) each bar is labeled with correct rounded percent of trials with that outcome\
\'a0 \'a0 \'a0 \'a0(0.5/0.5) labels are centered under each bar\
\'a0 \'a0 \'a0 \'a0(0.5/0.5) bars are spaced evenly\
\'a0 \'a0 \'a0 \'a0(0.5/0.5) bars are different colors\
\'a0 \'a0 \'a0 \'a0(2/2) works for one trial (including bar fitting on the screen)\
\'a0 \'a0 \'a0 \'a0(2/2) works for small numbers of trials (e.g., 2, 3, 4)\
\'a0 \'a0 \'a0 \'a0(1/1) works for very large number of trials (over 2M)\
\'a0 \'a0 \'a0 \'a0(3/3) gets different results on every run for a particular number of trials\
\'a0 \'a0 \'a0 \'a0(3/3) redraws the window correctly on resize, with horizontal bar placement,\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0and height of bars adjusted,\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0and with nothing hitting the edges of the window\
\
\'a0 \'a0(3/3) CoinTossSimulator class works with our test program\
\'a0 \'a0(2/2) Bar class works with our test program\
\
\'a0 Correctness comments:\
\
\
Testing\
\'a0 \'a0Subtotal: 7/7\
\'a0 \'a0(2/2) has a CoinTossSimulator test program that calls all methods and prints results\
\'a0 \'a0 \'a0 \'a0(OK) user input required to run test program\
\'a0 \'a0(5/5) CoinTossSimulator test program thoroughly tests CoinTossSimulator class:\
\'a0 \'a0 \'a0 \'a0(1/1) tests constructor by printing out results of accessors\
\'a0 \'a0 \'a0 \'a0(1/1) has several calls to run in sequence, printing out results of each\
\'a0 \'a0 \'a0 \'a0(1/1) checks that the outcomes add up to total number of trials after each run\
\'a0 \'a0 \'a0 \'a0(1/1) tests reset by printing out results of accessors\
\'a0 \'a0 \'a0 \'a0(1/1) has several (i.e., more than one) calls to run after a reset\
\
\'a0 \'a0Testing comments:}